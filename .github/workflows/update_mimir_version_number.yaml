name: 'Update MIMIR version number'
on:
  pull_request:
    types: [labeled]
  # branches:
  #   - 'master'

jobs:
  update_pr:
    runs-on: ubuntu-latest
    if: contains(fromJSON('["patch-release", "major-release", "minor-release"]'), github.event.label.name)
    steps:
      - name: Determine Version Bump Type
        id: determine_bump_type
        run: |
          TYPE=${{ github.event.label.name }}
          echo "TYPE=${TYPE}" >> $GITHUB_ENV
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Get old version Number
        run: |
          VERSION=$(awk -F' = ' '/^version/ {print $2}' ./gradle.properties)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Get new version number
        run: |
          if [[ $TYPE == "major-release" ]]; then
            NEW_VERSION=$(echo $VERSION | awk -F'.' '{print $1+1".0.0"}') 
          elif [[ $TYPE == "minor-release" ]]; then
            NEW_VERSION=$(echo $VERSION | awk -F'.' '{print $1"."$2+1".0"}') 
          elif [[ $TYPE == "patch-release" ]]; then
            NEW_VERSION=$(echo $VERSION | awk -F'.' '{print $1"."$2"."$3+1}') 
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
      - name: Set Version Number
        run: |
          ex -s -c "%s/$VERSION/$NEW_VERSION/g|x" ./gradle.properties
      - name: Git add
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add ./gradle.properties
      - name: Git commit
        run: |
          git commit -m "Update version number to $NEW_VERSION"
      - name: Git push
        run: |
          git push
      - name: Print Version Number
        run: |
          echo "Updated version number to: $NEW_VERSION"
